@page "/"
@attribute [Authorize]

@inject IArtistService ArtistService

@using Chinook.Models
@using Chinook.Services.Interfaces
@using Microsoft.EntityFrameworkCore

<PageTitle>Index</PageTitle>

<h1>Artists</h1>

@if (Artists == null)
{
    <Loading />
}
else
{
    <div>
        <input type="text" @bind="searchQuery" @bind:event="oninput"  placeholder="Search artists..." class="form-control my-2" />
    </div>
    <table class="table table-striped table-hover table-sm">
        <thead>
            <tr>
                <th>Name</th>
                <th>Number of albums</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var artist in Artists)
            {
                <tr>
                    <td><a href="Artist/@artist.ArtistId">@artist.Name</a></td>
                    <td>@artist.Albums.Count()</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Artist> Artists;
    private string _searchQuery = "";
    public string searchQuery
    {
        get => _searchQuery;
        set
        {
            if (_searchQuery != value)
            {
                _searchQuery = value;
                GetArtistsByName(); // Call your method whenever the searchQuery changes
            }
        }
    }
 
    protected override async Task OnInitializedAsync()
    {
        await InvokeAsync(StateHasChanged);
        Artists = await GetArtists();
    }

    public async Task<List<Artist>> GetArtists()
    {
        return await ArtistService.GetArtists();
    }

    private async void GetArtistsByName()
    {
        Artists = await ArtistService.GetArtistsByName(searchQuery);
    }

    public async Task<List<Album>> GetAlbumsForArtist(int artistId)
    {
        return await ArtistService.GetAlbumsForArtist(artistId);
    }
}
